# coordinator/worker를 단일 시스템으로 설정하는 경우
# Trino 인스턴스가 coordinator로 작동하도록 허용
# Allow this Trino instance to function as a coordinator, so to accept queries from clients and manage query execution.
coordinator=true

# HTTP 서버 포트
# Specifies the port for the HTTP server. Trino uses HTTP for all communication, internal and external.
http-server.http.port=8080

# Allows scheduling work on the coordinator so that a single machine can function as both coordinator and worker.
# For large clusters, processing work on the coordinator can negatively impact query performance
# because the machine’s resources are not available for the critical coordinator tasks of scheduling, managing, and monitoring query execution.
node-scheduler.include-coordinator=true
# node-scheduler.include-coordinator=false # coordinator에서 작업 스케쥴링 허용. worker로도 사용

###### Resource management ######

# This is the max amount of user memory a query can use across the entire cluster.
# User memory is allocated during execution for things that are directly attributable to, or controllable by, a user query.
# For example, memory used by the hash tables built during execution, memory used during sorting, etc.
# When the user memory allocation of a query across all workers hits this limit it is killed.
query.max-memory=2GB

# This is the max amount of user memory a query can use on a worker.
# User memory is allocated during execution for things that are directly attributable to, or controllable by, a user query.
# For example, memory used by the hash tables built during execution, memory used during sorting, etc.
# When the user memory allocation of a query on any worker hits this limit, it is killed.
query.max-memory-per-node=1GB


# This is the max amount of memory a query can use across the entire cluster, including revocable memory.
# When the memory allocated by a query across all workers hits this limit it is killed.
# The value of query.max-total-memory must be greater than query.max-memory.
query.max-total-memory=2.5GB


# he Trino coordinator has a discovery service that is used by all the nodes to find each other.
# Every Trino instance registers itself with the discovery service on startup and continuously heartbeats to keep its registration active.
# The discovery service shares the HTTP server with Trino and thus uses the same port.
# Replace example.net:8080 to match the host and port of the Trino coordinator.
# If you have disabled HTTP on the coordinator, the URI scheme must be https, not http.
# node 검색 서비스 URI
discovery.uri =http://localhost:8080 